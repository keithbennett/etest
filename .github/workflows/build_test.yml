name: CI

# Controls when the action will run.
on:
  push:
    branches: [ main, '[1-9].[0-9]+-devel' ]
  pull_request:
    branches: [ main, '[1-9].[0-9]+-devel' ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build_and_test:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
        - mode: debug
          flag: -b
          define:
        - mode: debug
          flag: -b
          define: >-
            -DPER_SPECIES_WEIGHT -DPARTICLE_ID -DPHOTONS -DTRIDENT_PHOTONS
            -DPER_PARTICLE_CHARGE_MASS -DPARSER_CHECKING -DWORK_DONE_INTEGRATED
            -DHC_PUSH
        - mode:
          flag:
          define:

    env:
      COMPILER: gfortran
      MPIPROCS: 2
      MODE: ${{ matrix.mode }}
      DEFINE: ${{ matrix.define }}

    steps:
      - name: Install dependencies
        run: sudo apt update &&
             sudo apt install -y
                 python3-dev
                 python3-numpy
                 python3-nose
                 python3-matplotlib
                 libpython3-dev
                 mpich

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cleanup
        run: cd epoch1d && make cleanall &&
             cd ../epoch2d && make cleanall &&
             cd ../epoch3d && make cleanall

      - name: Compile and run tests
        run: ./scripts/run-tests-epoch-all.sh ${{ matrix.flag }}

  build_and_test_dev:
    if: endsWith(github.repository, 'dev-epoch')
    strategy:
      matrix:
        compiler: [gfortran, pgi, intel]
    runs-on: self-hosted
    container:
      image: localhost:5000/ub
      options: -v install_data:/usr/local/software:ro

    env:
      COMPILER: ${{ matrix.compiler }}
      MPIPROCS: 9
      flags: ${{ matrix.compiler == 'gfortran' && ' ' || '-b' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Cleanup
        run: cd epoch1d && make cleanall &&
             cd ../epoch2d && make cleanall &&
             cd ../epoch3d && make cleanall

      - name: Compile and run tests
        run: . /home/runner/.bash_setup &&
             ./scripts/run-tests-epoch-all.sh $flags
